Index: src/academy/mindswap/game/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package academy.mindswap.game;\n\nimport academy.mindswap.game.commands.Command;\nimport academy.mindswap.game.messages.Messages;\n\nimport java.io.*;\nimport java.net.*;\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport static java.lang.Integer.parseInt;\n\npublic class Game {\n    private ServerSocket serverSocket;\n    private ExecutorService service;\n    int numOfPlayers;\n    private final List<PlayerConnectionHandler> playersList;\n    List<Integer> secretCode;\n    boolean win = false;\n    private final HashMap<String, Socket> userSocketMap;\n    List<String> turnResult;\n\n\n    public Game(int numOfPlayers) {\n        playersList = new CopyOnWriteArrayList<>();\n        userSocketMap = new HashMap<>();\n//        userBoardMap = new HashMap<>();\n        this.numOfPlayers = numOfPlayers;\n    }\n\n    public void start(int port) throws IOException {\n        serverSocket = new ServerSocket(port);\n        service = Executors.newFixedThreadPool(numOfPlayers);\n        System.out.printf(Messages.GAME_STARTED);\n\n        while (true) {\n            acceptConnection();\n        }\n    }\n\n    public void acceptConnection() throws IOException {\n        Socket playerSocket = serverSocket.accept();\n        PlayerConnectionHandler playerConnectionHandler =\n                new PlayerConnectionHandler(playerSocket);\n        service.submit(playerConnectionHandler);\n    }\n\n\n    public void broadcast(String name, String message) {\n        playersList.stream()\n                .filter(handler -> !handler.getName().equals(name))\n                .forEach(handler -> handler.send(name + \": \" + message));\n    }\n\n    public void removePlayer(PlayerConnectionHandler playerConnectionHandler) {\n        playersList.remove(playerConnectionHandler);\n    }\n\n    public void broadcastBoard(PlayerConnectionHandler player) {\n        updateBoard(player);\n        System.out.println(player.board.size());\n        for (int i = 0; i < player.board.size(); i++) {\n            System.out.println(i);\n            player.send(player.board.get(i));\n        }\n    }\n    public void updateBoard(PlayerConnectionHandler player) {\n        String newTry = \"_______________________ \\n\" +\n                \"|  \" +  player.playerGuess.get(0).toString() +\n                \"  |  \" + player.playerGuess.get(1).toString() +\n                \"  |  \" + player.playerGuess.get(2).toString() +\n                \"  |  \" + player.playerGuess.get(3).toString() + \"  |  \" + \" [==] \"\n                + turnResult.get(0) +\n                turnResult.get(1) + \" \" +\n                \" \" + turnResult.get(2) +\n                turnResult.get(3) + \"\\n_______________________    ____\";\n        System.out.println(newTry);\n        player.board.add(newTry);\n    }\n\n    private void generateCode() {\n        Random random = new Random();\n        secretCode = new ArrayList<>();\n        for (int i = 0; i < 4; i++) {\n            int digit = random.nextInt(5);\n            secretCode.add(digit);\n        }\n    }\n\n    private void compareCodes(List<Integer> playerGuess, List<Integer> secretCode) {\n        turnResult = new ArrayList<>();\n        List<Integer> playerGuessCopy = new ArrayList<>(playerGuess);\n        List<Integer> secretCodeCopy = new ArrayList<>(secretCode);\n        for (int i = 0; i < playerGuess.size(); i++) {\n            if (playerGuessCopy.get(i).equals(secretCodeCopy.get(i)) && playerGuessCopy.get(i) != null ) {\n                turnResult.add(\"+\");\n                playerGuessCopy.set(i,null);\n                secretCodeCopy.set(i,null);\n            }\n        }\n\n        for (int i = 0; i < playerGuess.size(); i++) {\n            if (secretCodeCopy.contains(playerGuessCopy.get(i)) && playerGuessCopy.get(i) != null) {\n                turnResult.add(\"-\");\n                playerGuessCopy.set(i,null);\n                secretCodeCopy.set(i,null);\n            }\n        }\n        playerGuessCopy.clear();\n        secretCodeCopy.clear();\n    }\n\n    private void checkWinner(List<Integer> playerGuess) {\n        if (secretCode.equals(playerGuess)) {\n            win = true;\n        }\n    }\n\n    public class PlayerConnectionHandler implements Runnable {\n\n        private String name;\n        private final Socket playerSocket;\n        private final BufferedWriter out;\n        private String message;\n        List<Integer> playerGuess;\n        private int turns;\n        private ArrayList<String> board;\n\n        public PlayerConnectionHandler(Socket playerSocket) throws IOException {\n            this.playerSocket = playerSocket;\n            this.out = new BufferedWriter(new OutputStreamWriter(playerSocket.getOutputStream()));\n            this.board = new ArrayList<>();\n        }\n\n        @Override\n        public void run() {\n            try {\n                addPlayer(this);\n                generateCode();\n                    while (!win) {\n                    send(Messages.INSERT_TRY);\n                    System.out.println(secretCode);\n                    communicate();\n                    checkWinner(playerGuess);\n                    compareCodes(playerGuess, secretCode);\n                    send(turnResult.toString());\n                    broadcastBoard(this);\n                    }\n                removePlayer(this);\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        private void addPlayer(PlayerConnectionHandler playerConnectionHandler) throws IOException {\n            playersList.add(playerConnectionHandler);\n            send(\"Please insert your username!\");\n            BufferedReader inputName = new BufferedReader(new InputStreamReader(playerSocket.getInputStream()));\n            this.name = inputName.readLine();\n            playerConnectionHandler.send(Messages.WELCOME.formatted(playerConnectionHandler.getName()));\n            playerConnectionHandler.send(readInstruction());\n            userSocketMap.put(playerConnectionHandler.getName(),playerConnectionHandler.playerSocket);\n\n\n        }\n\n        private String readInstruction() {\n            try {\n                File file = new File(\"resources/GameRules.txt\");\n                Scanner scanner = new Scanner(file);\n\n                StringBuilder stringBuilder = new StringBuilder();\n                while (scanner.hasNextLine()) {\n                    stringBuilder.append(scanner.nextLine());\n                    stringBuilder.append(\"\\n\");\n                }\n                scanner.close();\n                return stringBuilder.toString();\n            } catch (FileNotFoundException e) {\n                System.out.println(\"File not found \" + e.getMessage());\n            }\n            return null;\n        }\n\n        private void communicate() throws IOException {\n            try {\n                Scanner in = new Scanner(playerSocket.getInputStream());\n                message = in.nextLine();\n                if (isCommand(message)) {\n                    dealWithCommand(message);\n                }\n                validatePlay();\n                checkPlayerGuess();\n            } catch (IOException e) {\n                System.err.println(Messages.PLAYER_ERROR + e.getMessage());\n            }\n        }\n\n        private void checkPlayerGuess() {\n            playerGuess = new ArrayList<>(message.length());\n            for (int i = 0; i < message.length(); i++) {\n                playerGuess.add(parseInt(String.valueOf(message.charAt(i))));\n            }\n        }\n\n        private void validatePlay() throws IOException {\n            String regex = \"^\\\\d{4}$\";\n            final Pattern pattern = Pattern.compile(regex);\n            final Matcher matcher = pattern.matcher(message);\n            if (!matcher.find()) {\n                send(Messages.INVALID_TRY);\n                communicate();\n            }\n        }\n\n        private boolean isCommand(String message) {\n            return message.startsWith(\"/\");\n        }\n\n        private void dealWithCommand(String message) throws IOException {\n            String description = message.split(\" \")[0];\n            Command command = Command.getCommandFromDescription(description);\n            if (command == null) {\n                out.write(Messages.NO_SUCH_COMMAND);\n                out.newLine();\n                out.flush();\n                return;\n            }\n            command.getHandler().execute(Game.this, this);\n        }\n\n        public void send(String message) {\n            try {\n                out.write(message);\n                out.newLine();\n                out.flush();\n            } catch (IOException e) {\n                removePlayer(this);\n                e.printStackTrace();\n            }\n        }\n\n        public void close() {\n            try {\n                playerSocket.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public String getName() {\n            return name;\n        }\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/academy/mindswap/game/Game.java b/src/academy/mindswap/game/Game.java
--- a/src/academy/mindswap/game/Game.java	(revision d82440230e42edcaa20f135780a7d82c66828e01)
+++ b/src/academy/mindswap/game/Game.java	(date 1676545357863)
@@ -26,7 +26,6 @@
     public Game(int numOfPlayers) {
         playersList = new CopyOnWriteArrayList<>();
         userSocketMap = new HashMap<>();
-//        userBoardMap = new HashMap<>();
         this.numOfPlayers = numOfPlayers;
     }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b10b70de-bad9-4c01-a475-4a6e6a65c94a\" name=\"Changes\" comment=\"Working game!&#10;Needs to improve comparing algorithm...\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/MasterMind.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/MasterMind.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/MasterMind/academy/mindswap/game/Game.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/MasterMind/academy/mindswap/game/Game.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/academy/mindswap/game/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/academy/mindswap/game/Game.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/academy/mindswap/game/commands/GameRules.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/resources/GameRules.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/academy/mindswap/game/messages/Messages.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/academy/mindswap/game/messages/Messages.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2LjqGL2HZyfupAbklzWsPOHvqee\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/resources2\" />\n      <recent name=\"$PROJECT_DIR$/src/academy/mindswap/game/resources\" />\n      <recent name=\"$PROJECT_DIR$/src/academy/mindswap/game/commands\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.GameLauncher\">\n    <configuration name=\"GameLauncher\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"academy.mindswap.game.GameLauncher\" />\n      <module name=\"MasterMind\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"academy.mindswap.game.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Player\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"academy.mindswap.player.Player\" />\n      <module name=\"MasterMind\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"academy.mindswap.player.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.GameLauncher\" />\n      <item itemvalue=\"Application.Player\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Player\" />\n        <item itemvalue=\"Application.GameLauncher\" />\n        <item itemvalue=\"Application.Player\" />\n        <item itemvalue=\"Application.GameLauncher\" />\n        <item itemvalue=\"Application.Player\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b10b70de-bad9-4c01-a475-4a6e6a65c94a\" name=\"Changes\" comment=\"\" />\n      <created>1676394744034</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1676394744034</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Compare List ready\">\n      <created>1676464216642</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1676464216642</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Working game!&#10;Needs to improve comparing algorithm...\">\n      <created>1676475046114</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1676475046114</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"Result_algorithm\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Compare List ready\" />\n    <MESSAGE value=\"Working game!&#10;Needs to improve comparing algorithm...\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Working game!&#10;Needs to improve comparing algorithm...\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <watches-manager>\n      <configuration name=\"Application\">\n        <watch expression=\"secretCode\" />\n      </configuration>\n    </watches-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d82440230e42edcaa20f135780a7d82c66828e01)
+++ b/.idea/workspace.xml	(date 1676546406861)
@@ -5,12 +5,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b10b70de-bad9-4c01-a475-4a6e6a65c94a" name="Changes" comment="Working game!&#10;Needs to improve comparing algorithm...">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/MasterMind.iml" beforeDir="false" afterPath="$PROJECT_DIR$/MasterMind.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/MasterMind/academy/mindswap/game/Game.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/MasterMind/academy/mindswap/game/Game.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/academy/mindswap/game/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/academy/mindswap/game/Game.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/academy/mindswap/game/commands/GameRules.txt" beforeDir="false" afterPath="$PROJECT_DIR$/resources/GameRules.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/academy/mindswap/game/messages/Messages.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/academy/mindswap/game/messages/Messages.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -20,7 +15,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="main" />
+        <entry key="$PROJECT_DIR$" value="workingnullsforBroadcast" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -111,7 +106,14 @@
       <option name="project" value="LOCAL" />
       <updated>1676475046114</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="method for result working">
+      <created>1676545094769</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1676545094769</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -140,7 +142,8 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Compare List ready" />
     <MESSAGE value="Working game!&#10;Needs to improve comparing algorithm..." />
-    <option name="LAST_COMMIT_MESSAGE" value="Working game!&#10;Needs to improve comparing algorithm..." />
+    <MESSAGE value="method for result working" />
+    <option name="LAST_COMMIT_MESSAGE" value="method for result working" />
   </component>
   <component name="XDebuggerManager">
     <watches-manager>
